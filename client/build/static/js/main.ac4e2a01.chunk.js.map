{"version":3,"sources":["actions/errorActions.js","actions/types.js","components/header.js","actions/authActions.js","components/main.js","components/admin.js","components/login.js","components/register.js","hoc/privateRoute.js","hoc/unprivateRoute.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","Header","this","props","user","isLoading","isAuth","className","exact","to","username","onClick","logout","Component","connect","state","auth","isAuthenticated","dispatch","axios","get","then","Main","items","Admin","Login","mail","pass","onChange","e","target","value","name","setState","onSubmit","preventDefault","loginData","password","login","prevProps","history","push","error","window","location","autoComplete","placeholder","src","alt","redir","React","withRouter","body","JSON","stringify","post","headers","res","console","log","data","catch","err","response","Register","pass2","regData","register","pure","component","isAdmin","rest","render","includes","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","applyMiddleware","App","getState","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ac4e2a01.chunk.js","sourcesContent":["import {GET_ERRORS,CLEAR_ERRORS} from '../actions/types';\r\n\r\nexport const returnErrors = (msg,status,id=null) =>{\r\n    return {\r\n        type:GET_ERRORS,\r\n        payload: {msg,status,id}\r\n    }\r\n}\r\n\r\nexport const clearErrors = () =>{\r\n    return{\r\n        type:CLEAR_ERRORS\r\n    }\r\n}","export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {logout} from '../actions/authActions'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        const {user,isLoading,isAuth} = this.props;\r\n\r\n        return (\r\n            <div className=\"header-section\">\r\n                <div className=\"container flex-wrap\">\r\n                    <NavLink exact className=\"header-logo\" to=\"/\">Template</NavLink>\r\n                    <ul className=\"header-nav\">\r\n                        {(isLoading === false) && \r\n                            (!isAuth) \r\n                            ? (\r\n                                <span>\r\n                                    <li>\r\n                                        <NavLink exact className=\"btn simple\" to=\"/login\">Login</NavLink>\r\n                                    </li>\r\n                                    <li>\r\n                                        <NavLink exact className=\"btn simple\" to=\"/register\">Register</NavLink>\r\n                                    </li>\r\n                                </span>\r\n                            )\r\n                            : (\r\n                                <span>\r\n                                    <li>\r\n                                        <h3 className=\"user-title\">\r\n                                            {(isAuth) && user.username}\r\n                                        </h3>\r\n                                    </li>\r\n\r\n                                    <li>\r\n                                        <NavLink exact className=\"btn simple\" to=\"/\">Home</NavLink>\r\n                                    </li>\r\n\r\n                                    <li>\r\n                                        <NavLink exact className=\"btn simple\" to=\"/admin\">Admin</NavLink>\r\n                                    </li>\r\n                                    \r\n                                    <li>\r\n                                        <div onClick={this.props.logout} className=\"btn simple\">Logout</div>\r\n                                    </li>\r\n                                </span>\r\n                            )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({isAuth: state.auth.isAuthenticated, isLoading: state.auth.isLoading, user: state.auth.user})\r\n\r\nexport default connect(mapStateToProps, {logout})(Header)","import {USER_LOADING,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,REGISTER_SUCCESS,REGISTER_FAIL,LOGOUT_SUCCESS} from '../actions/types';\r\nimport {returnErrors} from './errorActions'\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    dispatch({type:USER_LOADING});\r\n\r\n    axios.get('/user/info')\r\n        .then(res => {\r\n            dispatch({type:USER_LOADED,payload:res.data})\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data,err.response.status,AUTH_ERROR))\r\n            dispatch({type:AUTH_ERROR})\r\n        })\r\n}\r\n\r\nexport const register = (regData) => dispatch =>{\r\n    const config = {headers:{'Content-type':'application/json'}}\r\n\r\n    const body = JSON.stringify(regData)\r\n    axios.post('/user/register',body,config)\r\n        .then(res => dispatch({type:REGISTER_SUCCESS,payload:res.data}))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data,err.response.status,REGISTER_FAIL))\r\n            dispatch({type:REGISTER_FAIL})\r\n        })\r\n}\r\n\r\nexport const login = (loginData) => dispatch =>{\r\n    const config = {headers:{'Content-type':'application/json'}}\r\n\r\n    const body = JSON.stringify(loginData)\r\n    axios.post('/user/login',body,config)\r\n        .then(res => {\r\n            console.log(res.status);\r\n            dispatch({type:LOGIN_SUCCESS,payload:res.data})\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response);\r\n            dispatch(returnErrors(err.response.data,err.response.status,LOGIN_FAIL))\r\n            dispatch({type:LOGIN_FAIL})\r\n        })\r\n}\r\n\r\nexport const logout = () => dispatch =>{\r\n    axios.get('/user/logout').then(()=>{\r\n        dispatch({type:LOGOUT_SUCCESS})\r\n    })\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        const {isAuth, isLoading, items} = this.props;\r\n\r\n        return (\r\n            <div className=\"main-section\">\r\n                <h2>Dashboard ( {(isAuth)\r\n                        ? (\r\n                            <span>Logged In</span>\r\n                        )\r\n                        : (\r\n                            <span>Logged Out</span>\r\n                        )})</h2>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuthenticated,isLoading:state.auth.isLoading})\r\nexport default connect(mapStateToProps, {})(Main);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Admin extends Component {\r\n    render() {\r\n        const {isAuth} = this.props;\r\n\r\n        return (\r\n            <div className=\"main-section\">\r\n                <h2>Admin Panel</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuthenticated,isLoading:state.auth.isLoading})\r\nexport default connect(mapStateToProps, {})(Admin);","import React from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {login} from '../actions/authActions'\r\nimport {clearErrors} from '../actions/errorActions'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        mail: '',\r\n        pass: '',\r\n        msg: {}\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const {value, name} = e.target;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const loginData = {\r\n            username: this.state.mail,\r\n            password: this.state.pass\r\n        }\r\n\r\n        this\r\n            .props\r\n            .login(loginData);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isAuth === true) {\r\n            this\r\n                .props\r\n                .clearErrors();\r\n            return this\r\n                .props\r\n                .history\r\n                .push('/')\r\n        }\r\n\r\n        const error = this.props.error;\r\n        if (error !== prevProps.error) {\r\n            if (error.id === \"LOGIN_FAIL\") \r\n                this.setState({msg: error.msg})\r\n            else \r\n                this.setState({msg: {}});\r\n            }\r\n        }\r\n\r\n    componentWillUnmount() {\r\n        this\r\n            .props\r\n            .clearErrors();\r\n    }\r\n\r\n    redir(){\r\n        window.location = 'https://localhost:5000/user/github'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-section\">\r\n\r\n                <h2 className=\"log-title\">Login</h2>\r\n\r\n                <div className=\"flex-wrap center\">\r\n                    <form onSubmit={this.onSubmit} className=\"add-form\" autoComplete=\"off\">\r\n                        <div className=\"simple-input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"mail\"\r\n                                placeholder=\"Mail\"\r\n                                value={this.state.mail}\r\n                                onChange={this.onChange}\r\n                                className={this.state.msg.mail && \"error\"}/> {this.state.msg.mail && (\r\n                                <div className=\"exclam\">\r\n                                    <img src=\"img/exclam-ico.png\" alt=\"\"/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"simple-input\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"pass\"\r\n                                placeholder=\"Password\"\r\n                                value={this.state.pass}\r\n                                onChange={this.onChange}\r\n                                className={this.state.msg.pass && \"error\"}/> {this.state.msg.pass && (\r\n                                <div className=\"exclam\">\r\n                                    <img src=\"img/exclam-ico.png\" alt=\"\"/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn\">Sign In</button>\r\n\r\n                        <a onClick={this.redir}>Github</a>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({isAuth: state.auth.isAuthenticated, error: state.error})\r\n\r\nexport default withRouter(connect(mapStateToProps, {login, clearErrors})(Login));","import React from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport {register} from '../actions/authActions'\r\nimport {clearErrors} from '../actions/errorActions'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        login: '',\r\n        mail: '',\r\n        pass: '',\r\n        pass2: '',\r\n        msg: {}\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const {value, name} = e.target;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const regData = {\r\n            login: this.state.login,\r\n            mail: this.state.mail,\r\n            pass: this.state.pass,\r\n            pass2: this.state.pass2\r\n        }\r\n\r\n        this\r\n            .props\r\n            .register(regData);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isAuth === true) {\r\n            this\r\n                .props\r\n                .clearErrors();\r\n            return this\r\n                .props\r\n                .history\r\n                .push('/')\r\n        }\r\n\r\n        const error = this.props.error;\r\n        if (error !== prevProps.error) {\r\n            if (error.id === \"REGISTER_FAIL\") \r\n                this.setState({msg: error.msg})\r\n            else \r\n                this.setState({msg: {}});\r\n            }\r\n        }\r\n\r\n    componentWillUnmount() {\r\n        this\r\n            .props\r\n            .clearErrors();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"register-section\">\r\n\r\n                <h2 className=\"log-title\">Register</h2>\r\n\r\n                <div className=\"flex-wrap center\">\r\n                    <form onSubmit={this.onSubmit} className=\"add-form\" autoComplete=\"off\">\r\n                        <div className=\"simple-input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"login\"\r\n                                placeholder=\"Login\"\r\n                                value={this.state.login}\r\n                                onChange={this.onChange}\r\n                                className={this.state.msg.login && \"error\"}/> {this.state.msg.login && (\r\n                                <div className=\"exclam\">\r\n                                    <img src=\"img/exclam-ico.png\" alt=\"\"/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"simple-input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"mail\"\r\n                                placeholder=\"E-mail\"\r\n                                value={this.state.mail}\r\n                                onChange={this.onChange}\r\n                                className={this.state.msg.mail && \"error\"}/> {this.state.msg.mail && (\r\n                                <div className=\"exclam\">\r\n                                    <img src=\"img/exclam-ico.png\" alt=\"\"/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"simple-input\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"pass\"\r\n                                placeholder=\"Password\"\r\n                                value={this.state.pass}\r\n                                onChange={this.onChange}\r\n                                className={this.state.msg.pass && \"error\"}/> {this.state.msg.pass && (\r\n                                <div className=\"exclam\">\r\n                                    <img src=\"img/exclam-ico.png\" alt=\"\"/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"simple-input\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"pass2\"\r\n                                placeholder=\"Password Again\"\r\n                                value={this.state.pass2}\r\n                                onChange={this.onChange}\r\n                                className={this.state.msg.pass2 && \"error\"}/> {this.state.msg.pass2 && (\r\n                                <div className=\"exclam\">\r\n                                    <img src=\"img/exclam-ico.png\" alt=\"\"/>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn\">Sign Up</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({isAuth: state.auth.isAuthenticated, error: state.error})\r\n\r\nexport default withRouter(connect(mapStateToProps, {register, clearErrors})(Register));\r\n","import React from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst PrivateRoute = ({component:Component,isAdmin, isAuth, user, isLoading, ...rest})=>{\r\n    return(\r\n        (!isLoading) && (\r\n        <Route exact {...rest} render={props=>{\r\n            if(!isAuth) return <Redirect to=\"/login\"/>\r\n            if(!isAdmin.includes(user.isAdmin)) return <Redirect to=\"/\"/>\r\n            return <Component/>\r\n        }}/>)\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({isAuth: state.auth.isAuthenticated,user: state.auth.user,isLoading:state.auth.isLoading})\r\nexport default connect(mapStateToProps, null, null, { pure: false, })(PrivateRoute);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst PrivateRoute = ({component:Component, isAuth, isLoading, ...rest})=>{\r\n    return(\r\n        (!isLoading) && (\r\n        <Route exact {...rest} render={props=>{\r\n            if(isAuth) return <Redirect to=\"/\"/>\r\n            return <Component/>\r\n        }}/>)\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({isAuth: state.auth.isAuthenticated,isLoading:state.auth.isLoading})\r\nexport default connect(mapStateToProps, null, null, { pure: false, })(PrivateRoute);\r\n\r\n\r\n\r\n\r\n","import {USER_LOADING,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,REGISTER_SUCCESS,REGISTER_FAIL,LOGOUT_SUCCESS} from '../actions/types'\r\n\r\nconst initialState = {\r\n    user:{},\r\n    isAuthenticated:false,\r\n    isLoading:false,\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case USER_LOADING:\r\n            return{\r\n                ...state,\r\n                isLoading:true\r\n            }\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                isAuthenticated:true,\r\n                user:action.payload\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                user:action.payload,\r\n                isLoading:false,\r\n                isAuthenticated:true,\r\n            }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case REGISTER_FAIL:\r\n        case LOGOUT_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isLoading:false,\r\n                isAuthenticated:false,\r\n                user:{}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {GET_ERRORS,CLEAR_ERRORS} from '../actions/types'\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status:null,\r\n    id:null\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return{\r\n                msg:action.payload.msg,\r\n                status:action.payload.status,\r\n                id:action.payload.id,\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return{\r\n                msg:{},\r\n                status:null,\r\n                id:null,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer'\r\nimport errorReducer from './errorReducer'\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    error:errorReducer\r\n})","import {createStore,applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer,initialState,applyMiddleware(...middleware)); \r\n\r\nexport default store;","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\nimport Header from './components/header'\r\nimport Main from './components/main'\r\nimport Admin from './components/admin'\r\nimport Login from './components/login'\r\nimport Register from './components/register'\r\nimport PrivateRoute from './hoc/privateRoute'\r\nimport UnprivateRoute from './hoc/unprivateRoute'\r\nimport './App.css';\r\n\r\nimport store from './store';\r\nimport {Provider} from 'react-redux';\r\nimport {loadUser} from './actions/authActions'\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        store.dispatch(loadUser())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <div className=\"wrapper\">\r\n                        <Header/>\r\n\r\n                        <div className=\"content-section\">\r\n                            <div className=\"container\">\r\n                                {/* <Route path='/' exact component={Main}/>\r\n                                <Route path='/admin' exact component={Admin}/>\r\n                                <Route path='/login' exact component={Login}/>\r\n                                <Route path='/register' exact component={Register}/> */}\r\n                                <PrivateRoute path=\"/\" isAdmin={[0,1]} component={Main}/>\r\n                                <PrivateRoute path=\"/admin\" isAdmin={[1]} component={Admin}/>\r\n                                <UnprivateRoute path=\"/login\" component={Login}/>\r\n                                <UnprivateRoute path=\"/register\" component={Register}/>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}